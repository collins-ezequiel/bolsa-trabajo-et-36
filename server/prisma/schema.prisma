generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ofertaslaborales {
  id                Int          @id @default(autoincrement())
  empresa_id        Int?
  titulo            String?
  descripcion       String?
  requisitos        String[]
  fecha_publicacion DateTime?       @default(now()) @db.Timestamptz(6)
  ubicacion         String?
  created_at        DateTime        @default(now()) @db.Timestamp(6)
  updated_at        DateTime        @default(now()) @db.Timestamp(6)
  usuarios          usuarios?       @relation(fields: [empresa_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  postulaciones     postulaciones[]
}

model perfiles {
  id          Int    @id @default(autoincrement())
  usuario_id  Int?
  descripcion String?
  aptitudes   String[]
  experiencia String?
  educacion   String?
  foto_perfil String?
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  usuarios    usuarios? @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model postulaciones {
  id                Int    @id @default(autoincrement())
  usuario_id        Int?
  oferta_id         Int?
  fecha_postulacion DateTime? @default(now()) @db.Timestamptz(6)
  estado            String?
  created_at        DateTime  @default(now()) @db.Timestamp(6)
  updated_at        DateTime  @default(now()) @db.Timestamp(6)
  ofertaslaborales  ofertaslaborales? @relation(fields: [oferta_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuarios          usuarios?         @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model usuarios {
  id               Int @id @default(autoincrement())
  nombre           String?
  apellido         String?
  email            String? @unique
  contrase_a       String? @map("contrase√±a")
  rol              role?
  titulo_validado  Boolean?
  fecha_registro   DateTime? @default(now()) @db.Timestamptz(6)
  created_at       DateTime  @default(now()) @db.Timestamp(6)
  updated_at       DateTime  @default(now()) @db.Timestamp(6)
  ofertaslaborales ofertaslaborales[]
  perfiles         perfiles[]
  postulaciones    postulaciones[]
  validaciones     validaciones[]
}

model validaciones {
  id               Int @id @default(autoincrement())
  usuario_id       Int?
  titulo           String?
  estado           String?
  fecha_validacion DateTime? @db.Timestamptz(6)
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  usuarios         usuarios? @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
enum role {
  ADMIN
  EMPRESA
  USUARIO
}